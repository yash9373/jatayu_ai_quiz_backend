"""
Alembic migration for new TestStatus enum and extra timestamps
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_test_status_enum_and_timestamps_20250721'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new ENUM type for status
    test_status_enum = postgresql.ENUM('preparing', 'draft', 'scheduled', 'live', 'ended', name='teststatus', create_type=True)
    test_status_enum.create(op.get_bind(), checkfirst=True)

    # Alter status column to use ENUM with explicit cast
    op.execute("ALTER TABLE tests ALTER COLUMN status TYPE teststatus USING status::teststatus")
    op.alter_column('tests', 'status', nullable=False, server_default='draft')

    # Add started_at and ended_at columns if not present
    op.add_column('tests', sa.Column('started_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('tests', sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True))

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tests', 'started_at')
    op.drop_column('tests', 'ended_at')
    op.alter_column('tests', 'status', type_=sa.String(length=20), existing_type=postgresql.ENUM(name='teststatus'), nullable=True)
    postgresql.ENUM(name='teststatus').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
